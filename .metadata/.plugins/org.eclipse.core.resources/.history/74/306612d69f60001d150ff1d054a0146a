import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Image;
import java.text.DecimalFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

public class Order_Form {
	DecimalFormat format = new DecimalFormat("#,###");
	String font_name = "배달의민족 주아";

	// ---------------------------------------------- 설정 관련
	JFrame order_main = new JFrame("상품 주문");

	// ---------------------------------------------- 메인 프레임
	JPanel top_menu = new JPanel();
	JPanel menu_btn_group = new JPanel();

	String menu_btn_arr[] = { "밥류", "면류", "튀김류", "과자류", "음료류", "기타" };
	JButton menu_btn[] = new JButton[menu_btn_arr.length];
	JPanel menu_item_group[] = new JPanel[menu_btn.length + 1];// 메뉴 + 검색창 한개 추가
	
	JPanel order_search_group = new JPanel(); // 검색 창
	JTextField order_search_tb = new JTextField("검색");
	JButton order_search_btn = new JButton(reSize_Img("Img/Src/search_icon.png", 35, 35));

	// ---------------------------------------------- 메뉴 영역	
	JPanel order_list_main = new JPanel();
	
	String order_list_lb_arr[] = { "", "", "주문 목록", "총 금액 : 0원", "결제방식", "요청사항" };
	JLabel order_list_lb[] = new JLabel[order_list_lb_arr.length];
	
	// ---------------------------------------------- 기본 틀
	String order_row[] = { "이름", "수량", "가격" };
	DefaultTableModel order_model = new DefaultTableModel(order_row, 0) {
		public boolean isCellEditable(int rowIndex, int mColIndex) {
			return false;
		}
	};

	JTable order_table = new JTable(order_model);
	JScrollPane order_scrollpane = new JScrollPane(order_table);

	// ---------------------------------------------- 주문 리스트 테이블
	JPanel order_calc_group = new JPanel();
	JLabel order_calc_count = new JLabel();
	JButton order_calc_plus = new JButton("+");
	JButton order_clac_minus = new JButton("-");
	
	// ---------------------------------------------- 주문 목록
	ButtonGroup order_cost_type_1 = new ButtonGroup(); // 현금 & 카드
	ButtonGroup order_cost_type_2 = new ButtonGroup(); // 선불 & 후불

	String order_radio_arr[] = { "현금", "카드", "선불", "후불", "", "" };
	JRadioButton[] order_radio_btn = new JRadioButton[order_radio_arr.length];

	String order_radio_1 = "";
	String order_radio_2 = "";
	
	// ---------------------------------------------- 결제방식 선택
	JTextArea order_send_text = new JTextArea();

	// ---------------------------------------------- 요청 사항
	String order_btn_arr[] = { "삭제", "초기화", "주문" };
	JButton order_btn[] = new JButton[order_btn_arr.length];
	JPanel order_btn_group = new JPanel();

	// ---------------------------------------------- 삭제, 초기화, 주문 버튼
	String order_Date() {
		LocalDateTime now = LocalDateTime.now();
		String formatedNow = now.format(DateTimeFormatter.ofPattern("yyyy-MM-dd/HH:mm:ss"));
		return formatedNow;
	}

	void Noti(String value, String title) {
		JOptionPane.showMessageDialog(null, value, title, JOptionPane.PLAIN_MESSAGE);
	}

	ImageIcon reSize_Img(String src, int x, int y) {
		ImageIcon icon = new ImageIcon(src);
		Image img = icon.getImage();
		Image changeImg = img.getScaledInstance(x, y, Image.SCALE_SMOOTH);
		ImageIcon changeIcon = new ImageIcon(changeImg);
		return changeIcon;
	}

	void set_Border(JTextField tb, Color color) {
		Border border = BorderFactory.createLineBorder(color, 2);
		tb.setBorder(border);
		tb.setBorder(BorderFactory.createCompoundBorder(tb.getBorder(), BorderFactory.createEmptyBorder(5, 5, 5, 5)));
	}

	void set_Font(JLabel lb, int size, Color color, int horizon) {
		lb.setFont(new Font(font_name, Font.PLAIN, size));
		lb.setForeground(color);
		lb.setHorizontalAlignment(horizon);
	}

	void menu_layout(JPanel pa) {
		pa.setBounds(0, 60, 935, 625);
		pa.setLayout(new FlowLayout(FlowLayout.LEFT));
		pa.setBackground(new Color(240, 240, 240));
	}

	void set_Btn(JButton btn, int size, Color bg_color, Color font_color, Dimension dm) {
		btn.setBackground(bg_color);
		btn.setFont(new Font(font_name, Font.PLAIN, 15));
		btn.setForeground(font_color);
		btn.setBorderPainted(false);
		btn.setFocusPainted(false);
		btn.setPreferredSize(dm);
	}

	void set_TextField(JTextField tb, Color br_line, Color font_color) {
		Border border = BorderFactory.createLineBorder(br_line, 2);
		tb.setBorder(border);
		tb.setBorder(BorderFactory.createCompoundBorder(tb.getBorder(), BorderFactory.createEmptyBorder(5, 5, 5, 5)));
		tb.setFont(new Font(font_name, Font.PLAIN, 15));
		tb.setForeground(font_color);
	}

	void table_Center(JTable tb, int count) {
		DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
		centerRenderer.setHorizontalAlignment(JLabel.CENTER);

		for (int i = 0; i < tb.getColumnCount(); i++) {
			tb.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
		}
	}

	public Order_Form() {
		order_main.setSize(1280, 720);
		order_main.setDefaultCloseOperation(order_main.DISPOSE_ON_CLOSE);
		order_main.setLocationRelativeTo(null);
		order_main.setResizable(false);
		order_main.setVisible(true);
		order_main.getContentPane().setBackground(Color.white);
		order_main.setLayout(null);

		// ---------------------------------------------- 메인 프레임
		top_menu.setBounds(0, 0, 935, 60);
		top_menu.setBackground(new Color(230, 230, 230));
		top_menu.setLayout(null);

		menu_btn_group.setBounds(0, 5, 935, 50);
		menu_btn_group.setBackground(new Color(230, 230, 230));
		menu_btn_group.setLayout(new FlowLayout());

		for (int i = 0; i < menu_btn_arr.length; i++) { // 메뉴 버튼
			menu_btn[i] = new JButton(menu_btn_arr[i]);
			set_Btn(menu_btn[i], 15, new Color(240, 240, 240), new Color(0, 120, 215), new Dimension(90, 35));
			menu_btn_group.add(menu_btn[i]);
		}

		for (int i = 0; i < menu_item_group.length; i++) { // 메뉴 페이지
			menu_item_group[i] = new JPanel();
			menu_layout(menu_item_group[i]);
			menu_item_group[i].setVisible(false);
			order_main.add(menu_item_group[i]);
		}
		
		order_search_group.setPreferredSize(new Dimension(214, 35)); // 검색창
		order_search_group.setLayout(null);

		order_search_tb.setBounds(0, 0, 179, 35);
		set_TextField(order_search_tb, new Color(240, 240, 240), new Color(200, 200, 200));

		order_search_btn.setBounds(179, 0, 35, 35);
		set_Btn(order_search_btn, 15, new Color(240, 240, 240), new Color(255, 255, 255), new Dimension(35, 35));
		order_search_btn.setEnabled(false);
		
		order_main.add(top_menu);
		top_menu.add(menu_btn_group);
		menu_btn_group.add(order_search_group);
		order_search_group.add(order_search_tb);
		order_search_group.add(order_search_btn);

		// ---------------------------------------------- 메뉴 영역
		order_list_main.setBounds(935, 0, 333, 720);
		order_list_main.setLayout(null);
		order_list_main.setBackground(new Color(220, 220, 220));
		
		for (int i = 0; i < order_list_lb_arr.length; i++) {
			order_list_lb[i] = new JLabel( order_list_lb_arr[i]);
			set_Font(order_list_lb[i], 20, new Color(0, 0, 0), JLabel.LEFT);
			order_list_main.add(order_list_lb[i]);
		}
				
		order_list_lb[0].setText("32번자리");
		order_list_lb[0].setBounds(5, 0, 323, 30); // ??번자리
		set_Font(order_list_lb[0], 15, new Color(0, 0, 0), JLabel.LEFT);

		order_list_lb[1].setText("홍길동님");
		order_list_lb[1].setBounds(5, 25, 323, 30); // ~~님
		set_Font(order_list_lb[1], 15, new Color(0, 0, 0), JLabel.LEFT);

		order_list_lb[2].setBounds(5, 55, 323, 30); // 주문리스트
		
		order_list_lb[3].setBounds(5, 375, 323, 30); // 주문금액 : 0원
		order_list_lb[4].setBounds(5, 405, 323, 30); // 결제방식
		
		// ---------------------------------------------- 기본 틀
		order_table.getTableHeader().setReorderingAllowed(false);
		order_table.getTableHeader().setResizingAllowed(false);

		order_scrollpane.getViewport().setBackground(Color.white);
		order_scrollpane.setBounds(0, 88, 333, 250);

		Border border = BorderFactory.createLineBorder(new Color(220, 220, 220), 5);
		order_scrollpane.setBorder(border);		
		
		// ---------------------------------------------- 주문 리스트 테이블		
		
		order_calc_group.setBounds(0, 336, 333, 40);
		order_calc_group.setBackground(new Color(220, 220, 220));

		set_Btn(order_calc_plus, 20, new Color(0, 120, 215), new Color(255, 255, 255), new Dimension(45, 30));
		set_Btn(order_clac_minus, 20, new Color(192, 0, 0), new Color(255, 255, 255), new Dimension(45, 30));

		order_calc_count.setText("0");
		set_Font(order_calc_count, 20, new Color(0, 0, 0), JLabel.CENTER);
		order_calc_count.setPreferredSize(new Dimension(60, 30));
		
		// ---------------------------------------------- 주문 목록 계산(더하기, 뺴기) 버튼
		for (int i = 0; i < order_radio_arr.length; i++) { // 라디오 박스
			order_radio_btn[i] = new JRadioButton(order_radio_arr[i]);
			order_radio_btn[i].setBackground(new Color(220, 220, 220));
			order_radio_btn[i].setFont(new Font(font_name, Font.PLAIN, 15));
			order_radio_btn[i].setForeground(Color.black);
			order_list_main.add(order_radio_btn[i]);
		}
		order_cost_type_1.add(order_radio_btn[0]); // 카드
		order_cost_type_1.add(order_radio_btn[1]);
		order_cost_type_1.add(order_radio_btn[4]); // 가짜버튼

		order_cost_type_2.add(order_radio_btn[2]); // 현금
		order_cost_type_2.add(order_radio_btn[3]);
		order_cost_type_2.add(order_radio_btn[5]); // 가짜버튼

		order_radio_btn[0].setBounds(3, 435, 50, 20);
		order_radio_btn[1].setBounds(63, 435, 50, 20);
		order_radio_btn[2].setBounds(123, 435, 50, 20);
		order_radio_btn[3].setBounds(183, 435, 50, 20);
		order_radio_btn[2].setEnabled(false);
		order_radio_btn[3].setEnabled(false);
			
		// ---------------------------------------------- 결제 방식	
		order_list_lb[5].setBounds(5, 455, 323, 30); // 요청사항

		order_send_text.setLineWrap(true); // 자동 줄바꿈
		JScrollPane order_send_scroll = new JScrollPane(order_send_text);

		order_send_scroll.setBounds(0, 485, 333, 130);
		order_send_scroll.setBorder(border);
		
		// ---------------------------------------------- 요청 사항
		order_main.add(order_list_main);
		
		order_list_main.add(order_scrollpane);
		order_list_main.add(order_calc_group);
		order_calc_group.add(order_clac_minus);
		order_calc_group.add(order_calc_count);
		order_calc_group.add(order_calc_plus);
		
		// ---------------------------------------------- 주문 목록

	}

	public void top_menu() {

	}

	public static void main(String[] args) {
		Order_Form of = new Order_Form();
	}
}
